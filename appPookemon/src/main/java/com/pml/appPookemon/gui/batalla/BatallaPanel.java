package main.java.com.pml.appPookemon.gui.batalla;

import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import javax.swing.ImageIcon;
import main.java.com.pml.appPookemon.datos.conf_arena.controller.ArenaController;
import main.java.com.pml.appPookemon.datos.pookemon.model.EfectoEnvenenamiento;
import main.java.com.pml.appPookemon.datos.pookemon.model.EfectoParalisis;
import main.java.com.pml.appPookemon.datos.pookemon.model.EfectoQuemadura;
import main.java.com.pml.appPookemon.datos.conf_arena.controller.BatallaController;
import main.java.com.pml.appPookemon.datos.pookemon.model.Movimiento;
import main.java.com.pml.appPookemon.datos.pookemon.model.MovimientoEspecial;
import main.java.com.pml.appPookemon.datos.pookemon.model.MovimientoFisico;
import main.java.com.pml.appPookemon.datos.pookemon.model.Objeto;
import main.java.com.pml.appPookemon.datos.pookemon.model.Pocion;
import main.java.com.pml.appPookemon.datos.pookemon.model.Pookemon;
import main.java.com.pml.appPookemon.datos.pookemon.model.RecuperarPPS;
import main.java.com.pml.appPookemon.datos.registro.model.Entrenador;
import main.java.com.pml.appPookemon.gui.MainFrame;
import main.java.com.pml.appPookemon.gui.config.StandarPanel;

/**
 *
 * @author feder
 */
public class BatallaPanel extends StandarPanel {
    private int turno;
    private int turnoJugador;
    private boolean pookemonEliminado;
    private boolean pk1Efecto;
    private boolean pk2Efecto;
    
    private BatallaController controlador;
    private BatallaCambio cambio;
    /**
     * Creates new form BatallaPrincipal
     */
    public BatallaPanel(MainFrame mainFrame) {
        super(mainFrame);
        initComponents();
        turno = 1;
        turnoJugador = 1;
        controlador = new BatallaController();
    }
    
    public void agregarEntrenador(int indice, Entrenador e){
        controlador.setEntrenador(indice, e);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_nombrePookemon_1 = new javax.swing.JLabel();
        btAtacar = new javax.swing.JButton();
        btDefender = new javax.swing.JButton();
        btCambiar = new javax.swing.JButton();
        btObjeto = new javax.swing.JButton();
        lb_nombrePookemon_2 = new javax.swing.JLabel();
        lbVidaPookemon1 = new javax.swing.JLabel();
        lbVidaPookemon2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaLog = new javax.swing.JTextArea();
        imgPookemon1 = new javax.swing.JLabel();
        pbVida1 = new javax.swing.JProgressBar();
        pbVida2 = new javax.swing.JProgressBar();
        imgPookemon2 = new javax.swing.JLabel();
        lbNombreEntrenador2 = new javax.swing.JLabel();
        lbNombreEntrenador1 = new javax.swing.JLabel();
        imgFlecha2 = new javax.swing.JLabel();
        imgFlecha1 = new javax.swing.JLabel();
        imgEfectoPk1 = new javax.swing.JLabel();
        imgEfectoPk2 = new javax.swing.JLabel();

        lb_nombrePookemon_1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        lb_nombrePookemon_1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_nombrePookemon_1.setText("Nombre Pookemon");
        lb_nombrePookemon_1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                lb_nombrePookemon_1ComponentAdded(evt);
            }
        });
        lb_nombrePookemon_1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lb_nombrePookemon_1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        lb_nombrePookemon_1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                lb_nombrePookemon_1ComponentShown(evt);
            }
        });

        btAtacar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btAtacar.setText("ATACAR");
        btAtacar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btAtacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtacarActionPerformed(evt);
            }
        });

        btDefender.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btDefender.setText("DEFENDER");
        btDefender.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btDefender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDefenderActionPerformed(evt);
            }
        });

        btCambiar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btCambiar.setText("CAMBIAR");
        btCambiar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btCambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCambiarActionPerformed(evt);
            }
        });

        btObjeto.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btObjeto.setText("OBJETOS");
        btObjeto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btObjetoActionPerformed(evt);
            }
        });

        lb_nombrePookemon_2.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        lb_nombrePookemon_2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lb_nombrePookemon_2.setText("Nombre Pookemon");

        lbVidaPookemon1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lbVidaPookemon1.setText("HP");

        lbVidaPookemon2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lbVidaPookemon2.setText("HP");

        txtAreaLog.setEditable(false);
        txtAreaLog.setColumns(20);
        txtAreaLog.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 10)); // NOI18N
        txtAreaLog.setLineWrap(true);
        txtAreaLog.setRows(5);
        jScrollPane1.setViewportView(txtAreaLog);

        imgPookemon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/resources/img/Ele_lucha.png"))); // NOI18N

        pbVida1.setValue(50);

        imgPookemon2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/resources/img/Ele_acero.png"))); // NOI18N

        lbNombreEntrenador2.setText("Nombre entrenador");

        lbNombreEntrenador1.setText("Nombre entrenador");

        imgFlecha2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/flecha.gif"))); // NOI18N

        imgFlecha1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/flecha.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btAtacar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btCambiar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btDefender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(imgFlecha1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imgFlecha2)
                .addGap(92, 92, 92))
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imgEfectoPk1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(imgPookemon1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(imgPookemon2)
                                .addGap(71, 71, 71))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(imgEfectoPk2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_nombrePookemon_1)
                            .addComponent(pbVida1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbVidaPookemon1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbVidaPookemon2)
                            .addComponent(pbVida2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_nombrePookemon_2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbNombreEntrenador1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbNombreEntrenador2)))
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imgFlecha2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbNombreEntrenador2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_nombrePookemon_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbVidaPookemon2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pbVida2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(imgFlecha1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbNombreEntrenador1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_nombrePookemon_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbVidaPookemon1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pbVida1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imgPookemon1)
                            .addComponent(imgPookemon2)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(imgEfectoPk2)
                            .addComponent(imgEfectoPk1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 219, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btAtacar)
                            .addComponent(btDefender))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btCambiar)
                            .addComponent(btObjeto))
                        .addGap(63, 63, 63))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btDefenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDefenderActionPerformed
        
        controlador.setAccionEntrenador(turnoJugador,"DEFENDER", 0);
        if(turnoJugador == 2){
            realizarTurno();
        }
        pasarJugador();
        
        configurarImagenes();
        configurarTextos();
        actualizarVidaVisual();
        configurarFlecha();
    }//GEN-LAST:event_btDefenderActionPerformed

    private void btCambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCambiarActionPerformed

        cambio = new BatallaCambio(controlador);
        cambio.configurar(turnoJugador);
        cambio.setPanelBatalla(this);
        cambio.setVisible(true);
    }//GEN-LAST:event_btCambiarActionPerformed

    private void btObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btObjetoActionPerformed

        BatallaObjeto objeto = new BatallaObjeto(controlador, this);
        objeto.configurar(turnoJugador);
        objeto.setVisible(true);
    }//GEN-LAST:event_btObjetoActionPerformed

    private void lb_nombrePookemon_1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_lb_nombrePookemon_1ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_lb_nombrePookemon_1ComponentShown

    private void lb_nombrePookemon_1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lb_nombrePookemon_1AncestorAdded

    }//GEN-LAST:event_lb_nombrePookemon_1AncestorAdded

    private void lb_nombrePookemon_1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_lb_nombrePookemon_1ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_lb_nombrePookemon_1ComponentAdded

    private void btAtacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtacarActionPerformed

        BatallaAtaque ataques = new BatallaAtaque(controlador);
        ataques.configurar(turnoJugador);
        ataques.setPanelBatalla(this);
        ataques.setVisible(true);
    }//GEN-LAST:event_btAtacarActionPerformed

    // Método para cambiar la imagen del personaje 
    // FALTA TERMINAR 
    public void cambiarImagenPersonaje(String rutaImagen) {
        // Cargar la imagen desde la ruta especificada
        ImageIcon icon = new ImageIcon(getClass().getResource(rutaImagen));
        // Asignar la imagen al JLabel
        imgPookemon1.setIcon(icon);
    }

    public void configurar() {

        asignarObjetos();
        controlador.getBatalla().generarMazo();

        configurarTextos();
        actualizarVidaVisual();
        configurarImagenes();
        configurarFlecha();
        txtAreaLog.setText("");
    }

    public void configurarTextos() {
        System.out.println("Turno del jugador: " + turnoJugador);
        Pookemon j1Pookemon = controlador.getEntrenador(1).getPookemonActual();
        Pookemon j2Pookemon = controlador.getEntrenador(2).getPookemonActual();
        int vidaPookemon1 = j1Pookemon.getEstadisticaPookemon().getVidaMaxima();
        int vidaPookemon2 = j2Pookemon.getEstadisticaPookemon().getVidaMaxima();
        
        lbNombreEntrenador1.setText(controlador.getEntrenador(1).getNombreEntrenador());
        lbNombreEntrenador2.setText(controlador.getEntrenador(2).getNombreEntrenador());
        lb_nombrePookemon_1.setText(j1Pookemon.getNombrePookemon());
        lb_nombrePookemon_2.setText(j2Pookemon.getNombrePookemon());
        pbVida1.setMaximum(vidaPookemon1);
        pbVida2.setMaximum(vidaPookemon2);
    }

    public void configurarImagenes() {
        String nombre1 = controlador.getEntrenador(1).getPookemonActual().getNombrePookemon().toLowerCase();
        String nombre2 = controlador.getEntrenador(2).getPookemonActual().getNombrePookemon().toLowerCase();
        URL imagen1 = getClass().getResource("/img/SpritesPookemon/" + nombre1 + ".gif");
        URL imagen2 = getClass().getResource("/img/SpritesPookemon/" + nombre2 + ".gif");
        ImageIcon img1 = new ImageIcon(imagen1);
        ImageIcon img2 = new ImageIcon(imagen2);
        imgPookemon1.setIcon(img1);
        imgPookemon2.setIcon(img2);
        configurarImagenesEfectos();
    }
    
    public void pasarJugador(){
        if(turnoJugador == 1){
            turnoJugador = 2;
        }else{
            turnoJugador = 1;
        }
    }

    public int getTurnoJugador() {
        return turnoJugador;
    }

    public void realizarTurno(){
        pk1Efecto = controlador.getEntrenador(1).getPookemonActual().tieneEfecto();
        pk2Efecto = controlador.getEntrenador(2).getPookemonActual().tieneEfecto();
        txtAreaLog.setText(controlador.realizarTurno());
        if(pookemonEliminado  == false){
            chequearVidaPookemones();
            pookemonEliminado = false;
        }
        aplicarEfectos();
        chequearGanador();
    }
    
    public void configurarFlecha(){
        if(turnoJugador == 1){
            imgFlecha1.setAlignmentX(pbVida1.getWidth() / 2);
            imgFlecha1.setVisible(true);
            imgFlecha2.setVisible(false);
        }else{
            imgFlecha2.setAlignmentX(pbVida2.getWidth() / 2);
            imgFlecha1.setVisible(false);
            imgFlecha2.setVisible(true);
        }
    }
    
    public void actualizarVidaVisual(){
        Pookemon j1Pookemon = controlador.getEntrenador(1).getPookemonActual();
        Pookemon j2Pookemon = controlador.getEntrenador(2).getPookemonActual();
        int vidaPookemon1 = j1Pookemon.getEstadisticaPookemon().getVida();
        int vidaPookemon2 = j2Pookemon.getEstadisticaPookemon().getVida();
        
        lbVidaPookemon1.setText("HP  " + vidaPookemon1);
        lbVidaPookemon2.setText("HP  " + vidaPookemon2);
        pbVida1.setValue(vidaPookemon1);
        pbVida2.setValue(vidaPookemon2);
    }
    
    public void chequearVidaPookemones(){
        int resultado = controlador.chequearVidaPookemones();
        
        if(resultado != -1){
            switch (resultado) {
                case 1:
                    pookemonEliminado(1);
                    break;
                case 2:
                    pookemonEliminado(2);
                    break;
                default:
                    break;
            }
        }
    }
    
    public void chequearGanador(){
        int resultado = controlador.chequearGanador();
        
        if(resultado != -1){
            cambio.dispose();
            if(resultado == 2){
                super.getMainFrame().switchToGanadorPanel(controlador.getEntrenador(2).getNombreEntrenador());
            }else if(resultado == 1){
                super.getMainFrame().switchToGanadorPanel(controlador.getEntrenador(1).getNombreEntrenador());
            }
        }
    }
    
    public void pookemonEliminado(int jugador){
        cambio = new BatallaCambio(controlador);
        cambio.setPanelBatalla(this);
        cambio.setCambioForzado(true);
        cambio.configurar(jugador);
        cambio.setVisible(true);
        pookemonEliminado = true;
    }
    
    private void aplicarEfectos(){
        if(pk1Efecto || pk2Efecto){
            txtAreaLog.setText(txtAreaLog.getText() + controlador.aplicarEfectos());
        }
        pk1Efecto = controlador.getEntrenador(1).getPookemonActual().tieneEfecto();
        pk2Efecto = controlador.getEntrenador(2).getPookemonActual().tieneEfecto();
    }
    
    private void configurarImagenesEfectos(){
        Pookemon pk1 = controlador.getEntrenador(1).getPookemonActual();
        Pookemon pk2 = controlador.getEntrenador(2).getPookemonActual();
        boolean pk1EfectoLocal = pk1.tieneEfecto();
        boolean pk2EfectoLocal = pk2.tieneEfecto();
        URL imagen1 = null;
        URL imagen2 = null;
        if(pk1EfectoLocal){
            imagen1 = getClass().getResource("/img/" + pk1.getEfecto().tipoEfecto() + ".png");
            imgEfectoPk1.setIcon(new ImageIcon(imagen1));
        }else{
            imgEfectoPk1.setIcon(null);
        }
        
        if(pk2EfectoLocal){
            imagen2 = getClass().getResource("/img/" + pk2.getEfecto().tipoEfecto() + ".png");
            imgEfectoPk2.setIcon(new ImageIcon(imagen2));
        }else{
            imgEfectoPk2.setIcon(null);
        }
    }
    
    public void asignarObjetos(){
        Pocion pocion = new Pocion(0);
        RecuperarPPS pps =  new RecuperarPPS(1);
        
        List<Objeto> objetos = new ArrayList<>(Arrays.asList(pocion,pps));
        
        controlador.getEntrenador(1).setObjetos(objetos);
        controlador.getEntrenador(2).setObjetos(objetos);
    }
    
    public void asignarMovimientos(){
        
        Entrenador j1 = controlador.getEntrenador(1);
        Entrenador j2 = controlador.getEntrenador(2);
        for (int i = 0; i < 2; i++) {
            if(i==0){
                for (Pookemon pookemon : j1.getPookemones()) {
                    asignarMovimientoAleatorios(pookemon);
                }
            } else{
                for (Pookemon pookemon : j2.getPookemones()) {
                    asignarMovimientoAleatorios(pookemon);
                }
            }
        }
    }
    
    private void asignarMovimientoAleatorios(Pookemon pookemon){
        ArenaController arena = new ArenaController();
        
        ArrayList<Movimiento> movimientos = new ArrayList<>();
        Random random = new Random();
        int i=0;
        boolean stab = false;
        while(i<3){
            int azar = random.nextInt(arena.getMovimientos().size());
            Movimiento iterable = arena.getMovimientos().get(azar);
            if(!movimientos.contains(iterable)){
                if(pookemon.getElementoPookemon().equals(iterable.getElemento())){
                    stab = true;
                }
                
                if(i<2 || stab){
                    movimientos.add(iterable);
                    i++;
                }
                
                if(i==2 && !revisarElementosMovimientos(movimientos).contains(pookemon.getElementoPookemon())){
                    movimientos.add(iterable);
                    i++;
                }
            }
        }
        pookemon.setMovimientos(movimientos);
    }
    
    private ArrayList<String> revisarElementosMovimientos(ArrayList<Movimiento> movimientos) {
        ArrayList<String> elementos = new ArrayList<>();
        for (Movimiento movimiento : movimientos) {
            if(!elementos.contains(movimiento.getElemento())){
                elementos.add(movimiento.getElemento());
            }
        }
        return elementos;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtacar;
    private javax.swing.JButton btCambiar;
    private javax.swing.JButton btDefender;
    private javax.swing.JButton btObjeto;
    private javax.swing.JLabel imgEfectoPk1;
    private javax.swing.JLabel imgEfectoPk2;
    private javax.swing.JLabel imgFlecha1;
    private javax.swing.JLabel imgFlecha2;
    private javax.swing.JLabel imgPookemon1;
    private javax.swing.JLabel imgPookemon2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbNombreEntrenador1;
    private javax.swing.JLabel lbNombreEntrenador2;
    private javax.swing.JLabel lbVidaPookemon1;
    private javax.swing.JLabel lbVidaPookemon2;
    private javax.swing.JLabel lb_nombrePookemon_1;
    private javax.swing.JLabel lb_nombrePookemon_2;
    private javax.swing.JProgressBar pbVida1;
    private javax.swing.JProgressBar pbVida2;
    private javax.swing.JTextArea txtAreaLog;
    // End of variables declaration//GEN-END:variables

}
